audience: "New college students"
learning_stage: "first-time"
topic: "Git"
context: "student"
analogies: "road trip planning with friends and writing a group project collaboration"

concepts:
  - "**Repository**: What it is and how it contains the entire project history"
  - "**Working Directory**: The files you're actively editing"
  - "**Staging Area**: The selection process before committing changes"
  - "**Commits**: How they capture project states at specific points"
  - "**Branches**: How they allow parallel development paths"
  - "**Merging**: How different paths can be combined"
  - "**GitHub**: How it facilitates collaboration and backup"

explanation_requirements:
  - "Start with a brief overview comparing Git to the chosen analogy"
  - "Use concrete, relatable examples from the analogy to explain Git concepts"
  - "Explain why Git is more powerful than simple file storage (like Google Drive)"
  - "Include common Git commands with their analogy equivalents"
  - "Explain practical benefits that would matter to students"

formatting:
  - "Use engaging section headers"
  - "Include bullet points for clarity"
  - "Present commands in code blocks with comments explaining their purpose"
  - "Use bold text for key terms when first introduced"

constraints:
  - "Avoid technical jargon without explanation"
  - "Don't assume prior knowledge of version control systems"
  - "Keep paragraphs short and digestible"
  - "Emphasize practical benefits over theoretical concepts"

output_format:
  - "Start with a catchy title"
  - "Open with a relatable scenario that hooks student interest"
  - "Develop multiple analogies that work together cohesively"
  - "End with a summary of why Git matters for future careers"
  - "Consider including a 'quick reference' section at the end"
  - "Recap the key concepts and their real-world implications"
  - "Provide a clear call-to-action for students to try Git themselves"

purpose: "version control and collaboration"
tone: "engaging, friendly, and conversational"